{"version":3,"sources":["components/Buttons.jsx","components/CubeGrid.jsx","lib/useMediaQuery.jsx","components/Solutions.jsx","lib/cubearray.js","lib/solveGridAlt.jsx","lib/sowpods.txt","lib/prepareBoardAndDict.js","App.js","reportWebVitals.js","index.js"],"names":["Buttons","props","classes","useStyles","className","root","Grid","container","justify","Button","button","variant","color","component","onClick","handleGetRandomClick","handleSolveClick","makeStyles","theme","flexGrow","maxWidth","margin","input","display","icon","CubeGrid","isSmall","query","mediaMatch","window","matchMedia","useState","matches","setMatches","useEffect","handler","e","addListener","removeListener","useMediaQuery","rolledLetters","control","map","cube","index","Cube","Circle","BoggleInput","value","inputProps","maxLength","onFocus","handleOnFocus","onChange","handleInputChange","style","indexOf","wmzStyle","apply","quStyle","defStyle","textDecoration","fontSize","justifyContent","width","withStyles","fontWeight","fontFamily","height","padding","transform","textAlign","textTransform","InputBase","background","borderRadius","Box","boxShadow","Solutions","filterLetters","setFilterLetters","filterNumbers","setFilterNumbers","lettersAll","setLettersAll","numbersAll","setNumbersAll","solution","length","heading","label","Paper","paper","AllButton","selected","event","size","StyledToggleButtonGroup","newLetters","letter","ToggleButton","NumberToggleGroup","newNumber","number","results","sortedByLength","sort","a","b","smallLetters","x","toLowerCase","parsedNumbers","flatMap","parseInt","filteredByLetter","filter","item","includes","filteredByNumber","columns","sortAndFilter","flexDirection","alignItems","backgroundColor","border","marginTop","breakpoints","between","flexWrap","minWidth","grouped","lineHeight","borderLeft","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","ToggleButtonGroup","maxHeight","marginRight","cubeArray","generateRandom","newArray","letterArray","_","shuffle","forEach","Math","floor","random","push","TrieNode","parent","this","children","Array","isWord","undefined","charCodeAt","MakeTrie","dict","word","curNode","i","ord","nextNode","BoggleWords","grid","mustHave","rows","cols","queue","words","Set","y","c","node","pop","s","h","dx","dy","x2","y2","find","el","newHist","slice","s2","node2","add","convertDict","fetch","dictionary","then","t","text","obj","split","dictArray","boardTransform","smallAndQ","array","splice","join","boardArray","App","fill","setRolledLetters","setSolution","newLetter","target","toUpperCase","newArr","updateLetters","useCallback","letters","d","board","wordSet","newSolve","from","values","ThemeProvider","randomArray","createMuiTheme","palette","primary","blueGrey","secondary","main","blue","xs","sm","md","lg","xl","overrides","MuiToggleButton","marginLeft","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0ebe6e6b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nfunction Buttons(props) {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Grid container justify={'center'} >\r\n        <Button\r\n          className={classes.button}\r\n          variant='contained' color='primary'\r\n          component='span'\r\n          onClick={props.handleGetRandomClick}>\r\n            Generate Random\r\n        </Button>\r\n        <Button\r\n          className={classes.button}\r\n          variant='contained'\r\n          color='secondary'\r\n          component='span'\r\n          onClick={props.handleSolveClick}>\r\n            Find Solutions\r\n        </Button>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Buttons;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: '700px',\r\n    margin: 'auto',\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  button: {\r\n    margin: '10px 10px',\r\n  },\r\n  icon: {\r\n    margin: '0 10px 0 -5px',\r\n  },\r\n}));\r\n","import React from 'react';\r\nimport { useMediaQuery } from '../lib/useMediaQuery';\r\n\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputBase from '@material-ui/core/InputBase'\r\nimport Box from '@material-ui/core/Box'\r\n\r\n\r\n\r\nfunction CubeGrid(props) {\r\n  const isSmall = useMediaQuery('(max-width: 520px)');\r\n  const classes = useStyles();\r\n\r\n  if (!props.rolledLetters) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Grid container className={classes.root}>\r\n      <Grid container className={classes.control}>\r\n        {props.rolledLetters.map((cube,index) => {\r\n\r\n          return (\r\n            <Cube key={`cube${index}`}>\r\n              <Circle key={`circle${index}`}>\r\n                <BoggleInput\r\n                  key={`input${index}`}\r\n                  value={props.rolledLetters[index]}\r\n                  inputProps={{maxLength: 1}}\r\n                  onFocus={e => props.handleOnFocus(e,index)}\r\n                  onChange={e => {\r\n                    props.handleInputChange(e,index);\r\n                  }}\r\n                  style={\r\n                    ['W','M','Z'].indexOf(props.rolledLetters[index]) > -1 ?\r\n                      wmzStyle.apply(isSmall) :\r\n                        props.rolledLetters[index] === 'Qu' ? quStyle.apply(isSmall) : defStyle.apply(isSmall)\r\n                  }\r\n                />\r\n              </Circle>\r\n            </Cube>\r\n          )\r\n        })\r\n        }\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default CubeGrid;\r\n\r\nconst wmzStyle = {\r\n  apply: isSmall => ({\r\n    textDecoration: 'underline',\r\n    fontSize: isSmall ? '36px' : '62px',\r\n  })\r\n};\r\n\r\nconst quStyle = {\r\n  apply: isSmall => ({\r\n    fontSize: isSmall ? '30px' : '56px',\r\n  })\r\n};\r\n\r\nconst defStyle = {\r\n  apply: isSmall => ({\r\n    fontSize: isSmall ? '38px' : '68px',\r\n  })\r\n};\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    justifyContent: 'center',\r\n    margin: '0 0 20px',\r\n  },\r\n  control: {\r\n    width: '400px',\r\n    ['@media (max-width:520px)']: { // eslint-disable-line no-useless-computed-key\r\n      width: '240px'\r\n    },\r\n  },\r\n}))\r\n\r\nconst BoggleInput = withStyles({\r\n  root: {\r\n    fontWeight: 700,\r\n    fontFamily: 'TexGyreHerosBold',\r\n    height: '100%',\r\n    padding: '0',\r\n    transform: 'translateY(-5%)',\r\n  },\r\n  input: {\r\n    textAlign: 'center',\r\n    textTransform: 'capitalize',\r\n  }\r\n})(InputBase);\r\n\r\nconst Cube = withStyles({\r\n  root: {\r\n    width: '90px',\r\n    height: '90px',\r\n    background: \"linear-gradient(#E8E6DC, #8f8779)\",\r\n    borderRadius: '5%',\r\n    margin: '5px',\r\n    ['@media (max-width:520px)']: { // eslint-disable-line no-useless-computed-key\r\n      width: '50px',\r\n      height: '50px',\r\n    }\r\n  }\r\n})(Box);\r\n\r\nconst Circle = withStyles({\r\n  root: {\r\n    width: '100%',\r\n    height: '100%',\r\n    background: '#cecac0',\r\n    borderRadius: '100%',\r\n    boxShadow: 'inset 0 0 2px 2px #dcdacf'\r\n  }\r\n})(Box);\r\n","import {useEffect, useState} from 'react';\r\n\r\nexport const useMediaQuery = (query) => {\r\n  const mediaMatch = window.matchMedia(query);\r\n  const [matches, setMatches] = useState(mediaMatch.matches);\r\n\r\n  useEffect(() => {\r\n    const handler = e => setMatches(e.matches);\r\n    mediaMatch.addListener(handler);\r\n    return () => mediaMatch.removeListener(handler);\r\n  });\r\n  return matches;\r\n};\r\n","import React, { useState } from 'react'\r\n\r\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ToggleButton from '@material-ui/lab/ToggleButton';\r\nimport ToggleButtonGroup from '@material-ui/lab/ToggleButtonGroup'\r\n\r\n\r\nfunction Solutions(props) {\r\n  const [filterLetters, setFilterLetters] = useState(['All']);\r\n  const [filterNumbers, setFilterNumbers] = useState(['All']);\r\n  const [lettersAll, setLettersAll] = useState(true);\r\n  const [numbersAll, setNumbersAll] = useState(true);\r\n\r\n  const letters = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z'];\r\n\r\n  const numOfLetters = ['2', '3', '4', '5', '6', '7+']\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleLetterChange = (event, newLetters) => {\r\n    (filterLetters.length === 2 && newLetters.length === 1) ? setLettersAll(true) : setLettersAll(false)\r\n    setFilterLetters(newLetters);\r\n  }\r\n\r\n  const handleLettersAll = event => {\r\n    setLettersAll(true);\r\n    setFilterLetters(['All']);\r\n}\r\n\r\n  const handleNumberChange = (event, newNumber) => {\r\n    (filterNumbers.length === 2 && newNumber.length === 1) ? setNumbersAll(true) : setNumbersAll(false)\r\n    setFilterNumbers(newNumber);\r\n  }\r\n\r\n  const handleNumbersAll = event => {\r\n    setNumbersAll(true);\r\n    setFilterNumbers(['All']);\r\n  }\r\n\r\n  const sortAndFilter = () => {\r\n    const sortedByLetter = props.solution.sort();\r\n    const sortedByLength = sortedByLetter.sort((a, b) => {\r\n      return a.length - b.length;\r\n    })\r\n    const smallLetters = filterLetters.map(x => x.toLowerCase());\r\n    const parsedNumbers = filterNumbers.flatMap(x => {\r\n      if (x === '7+') {\r\n        return ([7, 8, 9, 10, 11, 12, 13, 14, 15, 16])\r\n      }\r\n      return parseInt(x)\r\n    });\r\n\r\n    const filteredByLetter = lettersAll ? [...sortedByLength] :  sortedByLength.filter(item => smallLetters.includes(item[0]));\r\n\r\n    const filteredByNumber = numbersAll ? [...filteredByLetter] :\r\n    filteredByLetter.filter(item => parsedNumbers.includes(item.length))\r\n\r\n    if (filteredByNumber.length > 0) {\r\n      return (\r\n        <Grid className={classes.columns}>\r\n          {filteredByNumber.map(x => <div key={x}>{x}</div>)}\r\n        </Grid>\r\n      )\r\n    } else {\r\n      return 'No matches for your selection'\r\n    }\r\n  }\r\n\r\n  return (\r\n    !props.solution.length ? null :\r\n      <div className={classes.root}>\r\n\r\n        <Grid container className={classes.container} >\r\n          <div className={classes.heading}>Filter results by:</div>\r\n          <div className={classes.label}>Letter</div>\r\n          <Paper className={classes.paper}>\r\n\r\n            <AllButton\r\n              value='check'\r\n              selected={lettersAll}\r\n              onChange={handleLettersAll}\r\n              size='small'\r\n            >\r\n              All\r\n            </AllButton>\r\n            <StyledToggleButtonGroup\r\n              value={filterLetters}\r\n              onChange={handleLetterChange}\r\n            >\r\n              {letters.map(letter => (\r\n                <ToggleButton\r\n                  key={letter}\r\n                  value={letter}\r\n                  size='small'\r\n                >\r\n                  {letter}\r\n                </ToggleButton>\r\n              ))}\r\n            </StyledToggleButtonGroup>\r\n          </Paper>\r\n          <div className={classes.label}>Number</div>\r\n          <Paper className={classes.paper}>\r\n            <AllButton\r\n              value='check'\r\n              selected={numbersAll}\r\n              onChange={handleNumbersAll}\r\n              size='small'\r\n            >\r\n              All\r\n            </AllButton>\r\n            <NumberToggleGroup\r\n              value={filterNumbers}\r\n              onChange={handleNumberChange}\r\n            >\r\n              {numOfLetters.map(number => (\r\n                <ToggleButton\r\n                  key={number}\r\n                  value={number}\r\n                  size='small'\r\n                >\r\n                  {`${number} letters`}\r\n                </ToggleButton>\r\n              ))}\r\n            </NumberToggleGroup>\r\n          </Paper>\r\n        </Grid>\r\n        <Grid className={classes.results}>\r\n        {sortAndFilter()}\r\n        </Grid>\r\n      </div>\r\n  );\r\n}\r\n\r\n\r\nexport default Solutions;\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    maxWidth: '1200px',\r\n    margin: 'auto',\r\n    color: '#b0bec5',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  input: {\r\n    display: 'none',\r\n  },\r\n  button: {\r\n    margin: '0 10px'\r\n  },\r\n  container: {\r\n    flexDirection: 'column',\r\n    alignItems: 'left',\r\n    width: 'fit-content',\r\n  },\r\n  paper: {\r\n    width: 'fit-content',\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    backgroundColor: 'transparent',\r\n    border: '0px',\r\n    boxShadow: 'none',\r\n  },\r\n  results: {\r\n    marginTop: '50px',\r\n  },\r\n  columns: {\r\n    columns: '100px 7',\r\n    margin: '0 0 0 50px',\r\n\r\n    [theme.breakpoints.between('xs', 'sm')]: {\r\n      columns: '70px 4',\r\n      margin: '0 0 0 35px',\r\n    },\r\n\r\n  },\r\n  heading: {\r\n    marginTop: '30px',\r\n    fontWeight: '500',\r\n  },\r\n  label: {\r\n    margin: '10px 0 5px',\r\n    fontSize: '0.8rem'\r\n  }\r\n\r\n}));\r\n\r\n\r\nconst StyledToggleButtonGroup = withStyles(theme => ({\r\n  root: {\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n\r\n    [theme.breakpoints.between('lg','xl')]: {\r\n      minWidth: '754px'\r\n    },\r\n\r\n    [theme.breakpoints.between('md', 'md')]: {\r\n      minWidth: '377px',\r\n      maxWidth: '377px',\r\n    },\r\n\r\n    [theme.breakpoints.between('xs', 'sm')]: {\r\n      minWidth: '262px',\r\n      maxWidth: '262px',\r\n    },\r\n\r\n  },\r\n  grouped: {\r\n    lineHeight: '1',\r\n    minWidth: '30px',\r\n    maxWidth: '30px',\r\n    '&:not(:first-child)': {\r\n     borderLeft: '1px solid #757575',\r\n    },\r\n    [theme.breakpoints.between('md', 'md')]: {\r\n      '&:nth-child(13)': {\r\n      borderTopRightRadius: '4px',\r\n      borderBottomRightRadius: '4px',\r\n      },\r\n      '&:nth-child(14)': {\r\n      borderTopLeftRadius: '4px',\r\n      borderBottomLeftRadius: '4px',\r\n      borderLeft: 'none',\r\n      },\r\n    },\r\n    [theme.breakpoints.between('xs', 'sm')]: {\r\n      '&:nth-child(9n+0)': {\r\n      borderTopRightRadius: '4px',\r\n      borderBottomRightRadius: '4px',\r\n      },\r\n      '&:nth-child(9n+1)': {\r\n      borderTopLeftRadius: '4px',\r\n      borderBottomLeftRadius: '4px',\r\n      borderLeft: 'none',\r\n      },\r\n    },\r\n  },\r\n}))(ToggleButtonGroup);\r\n\r\nconst NumberToggleGroup = withStyles(theme => ({\r\n  root: {\r\n\r\n    [theme.breakpoints.between('lg','xl')]: {\r\n      minWidth: '650px'\r\n    },\r\n\r\n    [theme.breakpoints.between('md', 'md')]: {\r\n      minWidth: '328px',\r\n      maxWidth: '328px',\r\n\r\n    },\r\n\r\n    [theme.breakpoints.between('xs', 'sm')]: {\r\n      minWidth: '218px',\r\n      maxWidth: '218px',\r\n    },\r\n\r\n  },\r\n  grouped: {\r\n    minWidth: '110px',\r\n    maxWidth: '110px',\r\n    [theme.breakpoints.between('md', 'md')]: {\r\n      '&:nth-child(3)': {\r\n      borderTopRightRadius: '4px',\r\n      borderBottomRightRadius: '4px',\r\n      },\r\n      '&:nth-child(4)': {\r\n      borderTopLeftRadius: '4px',\r\n      borderBottomLeftRadius: '4px',\r\n      borderLeft: 'none',\r\n      },\r\n    },\r\n    [theme.breakpoints.between('xs', 'sm')]: {\r\n      '&:nth-child(2n+0)': {\r\n      borderTopRightRadius: '4px',\r\n      borderBottomRightRadius: '4px',\r\n      },\r\n      '&:nth-child(2n+1)': {\r\n      borderTopLeftRadius: '4px',\r\n      borderBottomLeftRadius: '4px',\r\n      borderLeft: 'none',\r\n      },\r\n    },\r\n  },\r\n\r\n}))(StyledToggleButtonGroup);\r\n\r\nconst AllButton = withStyles(theme => ({\r\n  root: {\r\n    lineHeight: '1',\r\n    width: '50px',\r\n    maxHeight: '28px',\r\n    marginRight: '4px',\r\n    [theme.breakpoints.between('xs', 'sm')]: {\r\n      width: '30ox',\r\n    },\r\n  }\r\n}))(ToggleButton);\r\n","import _ from 'lodash';\r\n\r\nconst cube1 = ['D','W','S','N','E','O'];\r\nconst cube2 = ['R','L','C','S','E','A'];\r\nconst cube3 = ['F','X','R','B','O','I'];\r\nconst cube4 = ['E','I','V','T','G','N'];\r\nconst cube5 = ['Z','N','V','D','E','A'];\r\nconst cube6 = ['L','Y','K','G','E','U'];\r\nconst cube7 = ['N','K','D','T','O','U'];\r\nconst cube8 = ['H','R','S','M','O','A'];\r\nconst cube9 = ['M','O','Qu','A','B','J'];\r\nconst cube10 = ['S','P','T','L','E','U'];\r\nconst cube11 = ['A','T','C','O','A','I'];\r\nconst cube12 = ['R','W','G','L','U','I'];\r\nconst cube13 = ['T','A','Y','I','B','L'];\r\nconst cube14 = ['E','I','F','H','E','Y'];\r\nconst cube15 = ['D','A','M','C','E','P'];\r\nconst cube16 = ['P','I','N','H','E','S'];\r\nconst cubeArray = [cube1, cube2, cube3, cube4, cube5, cube6, cube7, cube8, cube9, cube10, cube11, cube12, cube13, cube14, cube15, cube16];\r\n\r\nexport const generateRandom = () => {\r\n  const newArray = [...cubeArray]\r\n  const letterArray = []\r\n  const shuffledArray = _.shuffle(newArray)\r\n  shuffledArray.forEach(cube => {\r\n    const letter = cube[Math.floor(Math.random()* cube.length)];\r\n    letterArray.push(letter);\r\n  });\r\n  return letterArray;\r\n}\r\n\r\nexport default generateRandom;\r\n","\r\n\r\n/**\r\n * Created by mack0242 on 6/04/17.\r\n */\r\nvar TrieNode = function (parent, value) {\r\n    this.parent = parent;\r\n    this.children = new Array(26);\r\n    this.isWord = false;\r\n    if (parent !== undefined) {\r\n        parent.children[value.charCodeAt(0) - 97] = this;\r\n    }\r\n};\r\n\r\nvar MakeTrie = function (dict) {\r\n    var root = new TrieNode(undefined, '');\r\n    // console.log(root);\r\n    dict.forEach(word => {\r\n      var curNode = root;\r\n\r\n      for (var i = 0; i < word.length; i++) {\r\n          var letter = word[i];\r\n          var ord = letter.charCodeAt(0);\r\n          if (97 <= ord < 123) {\r\n              // console.log(curNode);\r\n              var nextNode = curNode.children[ord - 97];\r\n              if (nextNode === undefined) {\r\n                  nextNode = new TrieNode(curNode, letter);\r\n              }\r\n              curNode = nextNode;\r\n          }\r\n      }\r\n      curNode.isWord = true;\r\n    })\r\n\r\n    return root;\r\n};\r\n\r\nvar BoggleWords = function (grid, dict, mustHave) {\r\n    var rows = grid.length;\r\n    var cols = grid[0].length;\r\n    var queue = [];\r\n    var words = new Set();\r\n    for (var y = 0; y < cols; y++) {\r\n        for (var x = 0; x < rows; x++) {\r\n            var c = grid[y][x];\r\n            var ord = c.charCodeAt(0);\r\n            if (ord - 97 === 16) {\r\n              var node = dict.children[16].children[20];\r\n            } else {\r\n              var node = dict.children[ord - 97];\r\n            }\r\n            if (c === 'q') c = 'qu';\r\n            if (node !== undefined) {\r\n                queue.push([x, y, c, node, [[x, y]]]);\r\n            }\r\n        }\r\n    }\r\n    while (queue.length !== 0) {\r\n        var [x, y, s, node, h] = queue.pop();\r\n        for (let [dx, dy] of [[1, 0], [1, -1], [0, -1], [-1, -1], [-1, 0], [-1, 1], [0, 1], [1, 1]]) {\r\n            var [x2, y2] = [x + dx, y + dy];\r\n            if (h.find(function (el) {\r\n                    return el[0] === x2 && el[1] === y2;\r\n                }) !== undefined) {\r\n                continue;\r\n            }\r\n            // console.log(x2,y2, h);\r\n            if (0 <= x2 && x2 < cols && 0 <= y2 && y2 < rows) {\r\n                var newHist = h.slice();\r\n                newHist.push([x2, y2]);\r\n                var s2 = s + grid[y2][x2];\r\n                var node2 = node.children[grid[y2][x2].charCodeAt(0) - 97];\r\n                if (node2 !== undefined) {\r\n                    // console.log(s2);\r\n                    if (node2.isWord) {\r\n                        if (mustHave === undefined || s2.indexOf(mustHave) !== -1)\r\n                            words.add(s2);\r\n\r\n                        // console.log(newHist, s2);\r\n                    }\r\n                    queue.push([x2, y2, s2, node2, newHist]);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return words;\r\n}\r\n\r\n/*Example usage:\r\nvar df = require('./en_au_dict.js');\r\n\r\nconsole.log(BoggleWords(board, d));\r\n*/\r\n\r\nexport { BoggleWords, MakeTrie }\r\n","export default __webpack_public_path__ + \"static/media/sowpods.3fd498c0.txt\";","import dictionary from './sowpods.txt';\r\n\r\nconst convertDict = async () => {\r\n  const dictArray = await fetch(dictionary)\r\n      .then(t => t.text())\r\n      .then(obj => obj.split(/\\r?\\n/g));\r\n  return dictArray;\r\n}\r\n\r\nconst boardTransform = (rolledLetters) => {\r\n  const smallAndQ = rolledLetters.map(letter => {\r\n    if (letter === 'Qu') return 'q';\r\n    return letter.toLowerCase();\r\n  });\r\n\r\n  const boardArray = () => {\r\n    const array = []\r\n    for (let i = 0; i<4; i+=1) {\r\n      array.push(smallAndQ.splice(0,4).join(''))\r\n    }\r\n    return array;\r\n  }\r\n  return boardArray();\r\n};\r\n\r\nexport { convertDict, boardTransform }\r\n","import React, { useState, useCallback, useEffect } from 'react';\nimport './App.css';\n// import ClipLoader from 'react-spinners';\n\nimport { makeStyles, createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport blueGrey from '@material-ui/core/colors/blueGrey';\nimport blue from '@material-ui/core/colors/blue'\n\nimport Buttons from './components/Buttons.jsx';\nimport CubeGrid from './components/CubeGrid.jsx';\nimport Solutions from './components/Solutions.jsx';\n\nimport generateRandom from './lib/cubearray.js';\nimport { BoggleWords, MakeTrie } from './lib/solveGridAlt.jsx'\nimport { convertDict, boardTransform } from './lib/prepareBoardAndDict.js'\n\nfunction App() {\n  const [rolledLetters, setRolledLetters] = useState(new Array(16).fill(' '));\n  const [solution, setSolution] = useState([]);\n\n  const classes = useStyles();\n\n  const handleOnFocus = (event, index) => {\n    let newLetter = '';\n    let newArr = [...rolledLetters];\n    newArr[index] = newLetter;\n    updateLetters(newArr);\n  }\n\n  const handleInputChange = async (event, index) => {\n    let newLetter = event.target.value.toUpperCase();\n    if (newLetter === 'Q') newLetter = 'Qu';\n    let newArr = [...rolledLetters];\n    newArr[index] = newLetter;\n    updateLetters(newArr);\n  }\n\n  const updateLetters = useCallback((letters) => {\n    setRolledLetters(letters);\n  }, []);\n\n  const handleGetRandomClick = () => {\n    const randomArray = generateRandom();\n    updateLetters(randomArray);\n  }\n\n\n  const handleSolveClick = async function () {\n    const dict = await convertDict();\n    const d = await new MakeTrie(dict);\n    const board = await boardTransform(rolledLetters);\n    const wordSet = await BoggleWords(board, d);\n    const newSolve = Array.from(wordSet.values());\n    setSolution(newSolve);\n  }\n\n  useEffect(() => {\n    updateLetters(rolledLetters);\n  }, [rolledLetters, updateLetters]);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className={classes.root}>\n        <CubeGrid\n          rolledLetters={rolledLetters} handleInputChange={handleInputChange} handleOnFocus={handleOnFocus}\n        />\n        <Buttons\n          handleGetRandomClick={handleGetRandomClick}\n          handleSolveClick={handleSolveClick}\n        />\n        <Solutions solution={solution}/>\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: '5% 10%',\n  },\n}))\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blueGrey,\n    secondary: {\n      main: blue[700],\n    }\n  },\n  breakpoints: {\n    values: {\n      xs: 0,\n      sm: 370,\n      md: 520,\n      lg: 900,\n      xl: 1200\n    }\n  },\n  overrides: {\n        MuiToggleButton: {\n            root: {\n                marginLeft: '-1px !important',\n                marginTop: '3px',\n                border: 'none',\n                color: '#fff',\n                backgroundColor: '#616161',\n                '&$selected': {\n                    backgroundColor: '#607d8b',\n                    color: '#fff',\n                    '&:hover': {\n                        backgroundColor: '#607d8b',\n                    },\n                },\n                '&:hover': {\n                    backgroundColor: '#455a64',\n                },\n            },\n        },\n    },\n})\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}